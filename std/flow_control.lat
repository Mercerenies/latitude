
;; Continuations
Cont tag := Nil.
Cont call := { meta sys exitCC#: self, $1. }.
global callCC := { meta sys callCC#: meta Cont clone, { parent dynamic $1. }. }.

;; Booleans
Object toBool := True.
False toBool := False.
Nil toBool := False.
Object true? := False.
True true? := True.
Object false? := False.
False false? := True.
Object nil? := False.
Nil nil? := True.
Boolean toString := "Boolean".
True toString := "True".
False toString := "False".
Nil toString := "Nil".
global if := { meta sys ifThenElse#: meta True,
                                     $1 toBool,
                                     { parent dynamic $2. },
                                     { parent dynamic $3. }. }.
Object ifTrue := { if: self, { parent dynamic $1. }, { meta Nil. }.
                   hold 'self. }.
Object ifFalse := { if: self, { meta Nil. }, { parent dynamic $1. }.
                    hold 'self. }.
Object and := { if: self, { parent dynamic $1. }, {meta False. }. }.
Object or := { fst := self.
               if: fst, { fst. }, { parent dynamic $1. }. }.
Object not := { if: self, { meta False. }, { meta True. }. }.

;; Loops
global loop := { restart := callCC { $1. }.
                 $1.
                 restart call: restart. }.
global while := { cond := { parent dynamic $1. }.
                  stmt := { parent dynamic $2. }.
                  callCC { $break := { parent dynamic $1 call. }.
                           loop { if: cond,
                                      { stmt. },
                                      { $break: meta Nil. }. }. }. }.

;; Return the script
here.
