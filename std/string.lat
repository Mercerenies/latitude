
Array := Array.

; While the basic string functionality is defined in core.lat, this file defines more sophisticated
; methods on strings.

String replaceAll := { meta sys stringReplace#: self, $1, { parent dynamic $2. }. }.
String replace := { takes '[substr, mthd].
                    changed := False.
                    flipChanged := { parent changed := True. }.
                    self replaceAll: substr, { if: changed,
                                                   { substr. },
                                                   { flipChanged.
                                                     mthd. }. }. }.

String find := { takes '[substr].
                 index := Nil.
                 found := { parent index := if: index nil?,
                                                { parent dynamic $1. },
                                                { index. }. }.
                 self replaceAll: substr, { found: $1.
                                            substr. }.
                 index. }.
String findAll := { takes '[substr].
                    indices := Array clone.
                    self replaceAll: substr, { indices pushBack: $1.
                                               substr. }.
                    indices. }.

String size := { meta sys stringLength#: self. }.

String substring := { meta sys stringSubstring#: self, $1, $2. }.

String split := { localize.
                  takes '[delim].
                  index := 0.
                  found := { parent index := ($1) + (delim size). }.
                  arr := Array clone.
                  this replaceAll: delim, { arr pushBack: (this substring: index, $1).
                                            found: $1.
                                            delim. }.
                  arr pushBack: (this substring: index, this size).
                  arr. }.