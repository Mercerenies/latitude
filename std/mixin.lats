
;; Mixins
global Mixin ::= Object clone.
Mixin interface := '[].
Mixin injector := Nil.
Mixin inject := {
  this := self.
  target := $1.
  { Kernel eq (this injector, Nil). } ifTrue {
    injector := Object clone.
    injector mixin := this.
    injector toString := { self mixin toString. }.
    iter := this interface iterator.
    while { iter end? not. }
      do {
        curr := iter element.
        injector slot (curr) = {
          procd := self send: (self mixin slot: curr).
          procd call.
        }.
        iter next.
      }.
    this injector := injector.
  }.
  injector := this injector dup.
  injector parent := target parent.
  target parent := injector.
  injector.
}.
Mixin member? := {
  localize.
  takes '[arg].
  Parents hierarchy (#'arg) detect {
    takes '[obj].
    { obj slot? 'mixin. } and { (this) === (obj mixin). }.
  } toBool.
}.

here.